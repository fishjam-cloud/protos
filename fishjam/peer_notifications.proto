syntax = "proto3";

package fishjam;

import "fishjam/media_events/peer/peer.proto";
import "fishjam/media_events/server/server.proto";

// Defines any type of message sent between FJ and a peer
message PeerMessage {
  // Defines types of rooms peers may connect to
  enum RoomType {
    ROOM_TYPE_UNSPECIFIED = 0;
    ROOM_TYPE_CONFERENCE = 1;
    ROOM_TYPE_AUDIO_ONLY = 2;
    ROOM_TYPE_LIVESTREAM = 3;
  }

  // Response sent by FJ, confirming successful authentication
  message Authenticated {
    RoomType room_type = 1;
  }

  // Request sent by peer, to authenticate to FJ server
  message AuthRequest {
    string token = 1;
    string sdk_version = 2;
  }

  // PeerConnection stats sent by peer
  // https://developer.mozilla.org/en-US/docs/Web/API/RTCStatsReport#the_statistic_types
  message RTCStatsReport {
    string data = 1;
  }

  // Any type of WebRTC messages passed betweend FJ and peer
  message MediaEvent {
    string data = 1;
  }

  oneof content {
    Authenticated authenticated = 1;
    AuthRequest auth_request = 2;
    MediaEvent media_event = 3;
    RTCStatsReport rtc_stats_report = 4;
    media_events.peer.MediaEvent peer_media_event = 5;
    media_events.server.MediaEvent server_media_event = 6;
  }
}
